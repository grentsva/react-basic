{"version":3,"sources":["components/AppHeader/index.jsx","components/AppHeader/AppHeader.jsx","components/SearchPanel/index.jsx","components/SearchPanel/SearchPanel.jsx","components/PostStatusFilter/index.jsx","components/PostStatusFilter/PostStatusFilter.jsx","components/PostListItem/index.jsx","components/PostListItem/PostListItem.jsx","components/PostList/PostList.jsx","components/PostAddForm/index.jsx","components/PostAddForm/PostAddForm.jsx","components/App/index.jsx","components/App/App.jsx","index.js"],"names":["AppHeader","postsTotal","likeTotal","className","SearchPanel","props","state","term","onUpdateSearch","bind","e","target","value","this","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","btnClass","onClick","PostListItem","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","PostList","posts","item","id","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","App","data","deleteItem","addItem","maxId","index","findIndex","elem","before","slice","after","body","newItem","property","old","console","log","propertySelector","items","length","indexOf","visiblePosts","filterPost","searchPost","render","document","getElementById"],"mappings":"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","file":"static/js/main.51007774.chunk.js","sourcesContent":["import AppHeader from './AppHeader';\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\nimport './AppHeader.css';\r\n\r\nconst AppHeader = ({ postsTotal, likeTotal }) => {\r\n    return (\r\n        <div className='app-header d-flex'>\r\n            <h1>Vladislav Grents</h1>\r\n            <h2>\r\n                {postsTotal} записей, из них понравилось {likeTotal}\r\n            </h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;\r\n","import SearchPanel from './SearchPanel';\r\n\r\nexport default SearchPanel;\r\n","import React, { Component } from 'react';\r\nimport './SearchPanel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: ''\r\n        };\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n    onUpdateSearch(e) {\r\n        const term = e.target.value;\r\n        this.setState({ term });\r\n        this.props.onUpdateSearch(term);\r\n    }\r\n    render() {\r\n        return (\r\n            <input\r\n                className='form-control search-input'\r\n                type='text'\r\n                placeholder='Поиск по записям'\r\n                value={this.state.term}\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import PostStatusFilter from './PostStatusFilter';\r\n\r\nexport default PostStatusFilter;\r\n","import React, { Component } from 'react';\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttons = [\r\n            { name: 'all', label: 'Все' },\r\n            { name: 'like', label: 'Понравилось' }\r\n        ];\r\n    }\r\n    render() {\r\n        const buttons = this.buttons.map(({ name, label }) => {\r\n            const { filter, onFilterSelect } = this.props;\r\n            const active = filter === name;\r\n            const btnClass = active ? 'btn-info' : 'btn-outline-secondary';\r\n            return (\r\n                <button\r\n                    type='button'\r\n                    className={`btn ${btnClass}`}\r\n                    key={name}\r\n                    onClick={() => onFilterSelect(name)}\r\n                >\r\n                    {label}\r\n                </button>\r\n            );\r\n        });\r\n\r\n        return <div className='btn-group'>{buttons}</div>;\r\n    }\r\n}\r\n","import PostListItem from './PostListItem';\r\n\r\nexport default PostListItem;\r\n","import React, { Component } from 'react';\r\nimport './PostListItem.css';\r\n\r\nexport default class PostListItem extends Component {\r\n    render() {\r\n        const {\r\n            label,\r\n            onDelete,\r\n            onToggleImportant,\r\n            onToggleLiked,\r\n            important,\r\n            like\r\n        } = this.props;\r\n\r\n        let classNames = 'app-list-item d-flex justify-content-between';\r\n        if (important) {\r\n            classNames += ' important';\r\n        }\r\n        if (like) {\r\n            classNames += ' like';\r\n        }\r\n\r\n        return (\r\n            <div className={classNames}>\r\n                <span className='app-list-item-label' onClick={onToggleLiked}>\r\n                    {label}\r\n                </span>\r\n                <div className='d-flex justify-content-center align-items-center'>\r\n                    <button\r\n                        className='btn-star btn-sm'\r\n                        type='button'\r\n                        onClick={onToggleImportant}\r\n                    >\r\n                        <i className='fa fa-star'></i>\r\n                    </button>\r\n                    <button\r\n                        className='btn-trash btn-sm'\r\n                        type='button'\r\n                        onClick={onDelete}\r\n                    >\r\n                        <i className='fa fa-trash'></i>\r\n                    </button>\r\n                    <i className='fa fa-heart'></i>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './PostList.css';\r\nimport PostListItem from '../PostListItem';\r\n\r\nconst PostList = ({ posts, onDelete, onToggleImportant, onToggleLiked }) => {\r\n    return (\r\n        <div>\r\n            <ul className='app-list list-group'>\r\n                {posts.map((item) => {\r\n                    return (\r\n                        <li className='list-group-item' key={item.id}>\r\n                            <PostListItem\r\n                                {...item}\r\n                                onDelete={() => {\r\n                                    onDelete(item.id);\r\n                                }}\r\n                                onToggleImportant={() => {\r\n                                    onToggleImportant(item.id);\r\n                                }}\r\n                                onToggleLiked={() => {\r\n                                    onToggleLiked(item.id);\r\n                                }}\r\n                            />\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostList;\r\n","import PostAddForm from './PostAddForm';\r\n\r\nexport default PostAddForm;\r\n","import React, { Component } from 'react';\r\n\r\nimport './PostAddForm.css';\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        };\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    onValueChange(e) {\r\n        this.setState({\r\n            text: e.target.value\r\n        });\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text);\r\n        this.setState({\r\n            text: ''\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <form className='bottom-panel d-flex' onSubmit={this.onSubmit}>\r\n                <input\r\n                    type='text'\r\n                    placeholder='О чем вы думаете сейчас?'\r\n                    className='form-control new-post-label'\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}\r\n                />\r\n                <button type='submit' className='btn btn-outline-secondary'>\r\n                    Добавить\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import App from './App';\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport AppHeader from '../AppHeader';\r\nimport SearchPanel from '../SearchPanel';\r\nimport PostStatusFilter from '../PostStatusFilter';\r\nimport PostList from '../PostList/PostList';\r\nimport PostAddForm from '../PostAddForm';\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [\r\n                {\r\n                    id: 1,\r\n                    label: 'Going to learn React',\r\n                    important: true,\r\n                    like: false\r\n                },\r\n                {\r\n                    id: 2,\r\n                    label: 'That is so good',\r\n                    important: false,\r\n                    like: false\r\n                },\r\n                {\r\n                    id: 3,\r\n                    label: 'I need a break...',\r\n                    important: false,\r\n                    like: false\r\n                }\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        };\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLiked = this.onToggleLiked.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n\r\n        this.maxId = 4;\r\n    }\r\n\r\n    deleteItem(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex((elem) => elem.id === id);\r\n            const before = data.slice(0, index);\r\n            const after = data.slice(index + 1);\r\n            const newArr = [...before, ...after];\r\n            return {\r\n                data: newArr\r\n            };\r\n        });\r\n    }\r\n\r\n    addItem(body) {\r\n        const newItem = {\r\n            id: this.maxId++,\r\n            label: body,\r\n            important: false\r\n        };\r\n        this.setState(({ data }) => {\r\n            const newArr = [...data, newItem];\r\n            return {\r\n                data: newArr\r\n            };\r\n        });\r\n    }\r\n\r\n    propertySelector(id, property) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex((elem) => elem.id === id);\r\n            const old = data[index];\r\n            let newItem;\r\n            if (property === 'important') {\r\n                newItem = { ...old, important: !old.important };\r\n            } else if (property === 'like') {\r\n                newItem = { ...old, like: !old.like };\r\n            } else {\r\n                console.log('Error');\r\n            }\r\n            const newArr = [\r\n                ...data.slice(0, index),\r\n                newItem,\r\n                ...data.slice(index + 1)\r\n            ];\r\n            return {\r\n                data: newArr\r\n            };\r\n        });\r\n    }\r\n\r\n    onToggleImportant(id) {\r\n        this.propertySelector(id, 'important');\r\n    }\r\n\r\n    onToggleLiked(id) {\r\n        this.propertySelector(id, 'like');\r\n    }\r\n\r\n    searchPost(items, term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.indexOf(term) > -1;\r\n        });\r\n    }\r\n\r\n    filterPost(items, filter) {\r\n        if (filter === 'like') {\r\n            return items.filter((item) => item.like);\r\n        } else {\r\n            return items;\r\n        }\r\n    }\r\n\r\n    onUpdateSearch(term) {\r\n        this.setState({ term });\r\n    }\r\n\r\n    onFilterSelect(filter) {\r\n        this.setState({ filter });\r\n    }\r\n\r\n    render() {\r\n        const { data, term, filter } = this.state;\r\n        const visiblePosts = this.filterPost(\r\n            this.searchPost(data, term),\r\n            filter\r\n        );\r\n        const likeTotal = data.filter((item) => item.like).length;\r\n        const postsTotal = data.length;\r\n        return (\r\n            <div className='app'>\r\n                <AppHeader likeTotal={likeTotal} postsTotal={postsTotal} />\r\n                <div className='search-panel d-flex'>\r\n                    <SearchPanel onUpdateSearch={this.onUpdateSearch} />\r\n                    <PostStatusFilter\r\n                        filter={filter}\r\n                        onFilterSelect={this.onFilterSelect}\r\n                    />\r\n                </div>\r\n                <PostList\r\n                    posts={visiblePosts}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLiked={this.onToggleLiked}\r\n                />\r\n                <PostAddForm onAdd={this.addItem} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nrender(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}